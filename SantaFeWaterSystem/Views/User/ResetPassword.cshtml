@model SantaFeWaterSystem.ViewModels.ResetPasswordViewModel

@{
    ViewData["Title"] = "Reset Password";
    Layout = "_AccountLayout";
}

<div class="reset-container">
    <div class="card card-custom rounded-3">
        <div class="card-header bg-primary text-white text-center">
            <h4 class="mb-0"><i class="bi bi-lock-fill me-2"></i>Change Password</h4>
            @await Html.PartialAsync("_PasswordRequirements", (SantaFeWaterSystem.Models.PasswordPolicy)ViewBag.PasswordPolicy)
        </div>

        <div class="card-body">
            @* ✅ Success/Error Alerts *@
            @if (TempData["Message"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="bi bi-check-circle-fill me-2"></i>@TempData["Message"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="bi bi-exclamation-triangle-fill me-2"></i>@TempData["Error"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <form asp-action="ResetPassword" method="post" novalidate>
                @Html.AntiForgeryToken()

                <!-- Current Password -->
                <div class="mb-3 position-relative">
                    <label for="CurrentPassword" class="form-label fw-bold">
                        <i class="bi bi-shield-lock-fill"></i> Current Password
                    </label>
                    <input asp-for="CurrentPassword" id="CurrentPassword" type="password"
                           class="form-control" placeholder="Enter current password"
                           autocomplete="current-password" required />
                    <span asp-validation-for="CurrentPassword" class="text-danger small"></span>
                </div>

                <!-- New Password -->
                <div class="mb-3 position-relative">
                    <label for="NewPassword" class="form-label fw-bold">
                        <i class="bi bi-key-fill"></i> New Password
                    </label>
                    <input asp-for="NewPassword" id="NewPassword" type="password"
                           class="form-control" placeholder="Enter new password"
                           autocomplete="new-password" required />
                    <span asp-validation-for="NewPassword" class="text-danger small"></span>
                    <div id="passwordStrength" class="password-strength mt-1" aria-live="polite"></div>
                </div>

                <!-- Confirm Password -->
                <div class="mb-3 position-relative">
                    <label for="ConfirmPassword" class="form-label fw-bold">
                        <i class="bi bi-key"></i> Confirm Password
                    </label>
                    <input asp-for="ConfirmPassword" id="ConfirmPassword" type="password"
                           class="form-control" placeholder="Re-enter new password"
                           autocomplete="new-password" required />
                    <span asp-validation-for="ConfirmPassword" class="text-danger small"></span>
                    <div id="matchMessage" class="match-message mt-1" aria-live="polite"></div>
                </div>

                <!-- Show Password Checkbox -->
                <div class="form-check mb-3">
                    <input class="form-check-input" type="checkbox" id="showPasswordCheck">
                    <label class="form-check-label" for="showPasswordCheck">Show Password</label>
                </div>

                <!-- Submit / Cancel Buttons -->
                <div class="d-grid gap-2 mt-4">
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-check-circle-fill"></i> Save New Password
                    </button>
                    <a asp-action="Index" asp-controller="ConsumerSetting" class="btn btn-outline-secondary">
                        <i class="bi bi-arrow-left-circle"></i> Cancel
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        const newPassword = document.getElementById('NewPassword');
        const confirmPassword = document.getElementById('ConfirmPassword');
        const currentPassword = document.getElementById('CurrentPassword');
        const strengthText = document.getElementById('passwordStrength');
        const matchMessage = document.getElementById('matchMessage');

        // Toggle show password
        document.getElementById('showPasswordCheck').addEventListener('change', function () {
            const type = this.checked ? 'text' : 'password';
            [newPassword, confirmPassword, currentPassword].forEach(el => {
                if (el) el.type = type;
            });
        });

        // Password Strength
        newPassword.addEventListener('input', function () {
            const val = this.value;
            let strength = '';
            let colorClass = '';

            if (val.length >= 8 && /[A-Z]/.test(val) && /\d/.test(val) && /[\W_]/.test(val)) {
                strength = 'Strong';
                colorClass = 'strong';
            } else if (val.length >= 6 && /[A-Z]/.test(val) && /\d/.test(val)) {
                strength = 'Medium';
                colorClass = 'medium';
            } else if (val.length > 0) {
                strength = 'Weak';
                colorClass = 'weak';
            }

            strengthText.textContent = strength;
            strengthText.className = 'password-strength ' + colorClass;
        });

        // Match Checker
        function checkPasswordMatch() {
            const newVal = newPassword.value;
            const confirmVal = confirmPassword.value;

            if (confirmVal.length === 0) {
                matchMessage.textContent = '';
                matchMessage.className = 'match-message';
                return;
            }

            if (newVal === confirmVal) {
                matchMessage.textContent = '✅ Passwords match';
                matchMessage.className = 'match-message match';
            } else {
                matchMessage.textContent = '❌ Passwords do not match';
                matchMessage.className = 'match-message no-match';
            }
        }

        newPassword.addEventListener('input', checkPasswordMatch);
        confirmPassword.addEventListener('input', checkPasswordMatch);
    </script>
}

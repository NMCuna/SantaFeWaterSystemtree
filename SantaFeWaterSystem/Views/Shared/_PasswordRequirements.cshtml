@model SantaFeWaterSystem.Models.PasswordPolicy

@functions {
    private string GenerateReadableExample(int length)
    {
        // Base pattern: starts with "ExamplePasswordEx" (letters only)
        string baseWord = "ExamplePasswordEx";

        // Always append "1@" at the end (number + symbol, fixed position)
        string requiredSuffix = "1@";

        // Ensure the core word is long enough
        string core = baseWord;
        while (core.Length < length - requiredSuffix.Length)
        {
            core += baseWord; // repeat if needed
        }

        // Build password: slice exactly to required length
        string result = core.Substring(0, Math.Max(0, length - requiredSuffix.Length)) + requiredSuffix;

        return result.Substring(0, length); // trim if overshoot
    }

    private string GetBadgeClass(int length)
    {
        if (length < 4)
        {
            return "bg-danger text-white"; // red = too short
        }
        else if (length < 6)
        {
            return "bg-warning text-dark"; // yellow = okay but weak
        }
        else
        {
            return "bg-success text-white"; // green = strong
        }
    }
}

@if (Model != null)
{
    <div class="card shadow-sm border-0 mt-3">
        <div class="card-body">
            <h6 class="card-title mb-3">
                <i class="bi bi-shield-lock text-primary me-2"></i> Password Policy
            </h6>

            <p class="text-muted small mb-0">
                Your password must be at least <strong>@Model.MinPasswordLength</strong> characters long.
                @if (Model.RequireComplexity)
                {
                    @: It must also include a mix of <strong>uppercase</strong>, <strong>lowercase</strong>, <strong>numbers</strong>, and <strong>special characters</strong>.
                    @: (Example: <span class="badge @GetBadgeClass(Model.MinPasswordLength) px-2 py-1">@GenerateReadableExample(Model.MinPasswordLength)</span>)
                }
                @if (Model.PasswordHistoryCount > 0)
                {
                    @: You cannot reuse your last <strong>@Model.PasswordHistoryCount</strong> passwords.
                }
                @if (Model.MaxPasswordAgeDays > 0)
                {
                    @: Passwords will expire every <strong>@Model.MaxPasswordAgeDays</strong> days.
                }
                @if (Model.MinPasswordAgeDays > 0)
                {
                    @: You must wait at least <strong>@Model.MinPasswordAgeDays</strong> days before changing your password again.
                }
            </p>
        </div>
    </div>
}
else
{
    <div class="alert alert-warning d-flex align-items-center small mt-3">
        <i class="bi bi-exclamation-triangle-fill me-2"></i>
        Password policy not configured.
    </div>
}

@{
    Layout = null;
    var title = ViewData["Title"] ?? "Santa Fe Water System";

    // Safely get the ApplicationDbContext
    var dbContext = Context.RequestServices
        .GetService<SantaFeWaterSystem.Data.ApplicationDbContext>();

    // Use null-conditional operators to prevent dereference if dbContext or SystemBrandings is null
    var branding = dbContext?.SystemBrandings?.FirstOrDefault();

    string brandName = branding?.SystemName ?? "Santa Fe Water System";
    string iconClass = branding?.IconClass ?? "bi bi-droplet-half";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@title</title>

    <!-- Bootstrap & Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">


    <!-- Custom External Styles -->
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/layout.css" asp-append-version="true" />

    @RenderSection("Styles", required: false)

</head>
<body>
    <header>
        <nav class="navbar fixed-top navbar-expand-lg navbar-dark bg-primary shadow-sm">
            <div class="container">
                <a class="navbar-brand fw-bold d-flex align-items-center" asp-controller="Home" asp-action="Index">
                    <div class="animated-logo-wrapper me-2" style="width:36px; height:36px; position:relative;">

                        <!-- Outer Halo (subtle background glow for contrast) -->
                        <div style="position:absolute; top:0; left:0; width:100%; height:100%; border-radius:50%; background: rgba(255,255,255,0.1);"></div>

                        <!-- Glow Ring 1 -->
                        <svg class="glow-ring ring1" viewBox="0 0 120 120" style="width:100%; height:100%;">
                            <defs>
                                <linearGradient id="glowGradient1" x1="0%" y1="0%" x2="100%" y2="100%">
                                    <stop offset="0%" stop-color="#ffffff" />
                                    <stop offset="50%" stop-color="#ffea00" />
                                    <stop offset="100%" stop-color="#ffffff" />
                                </linearGradient>
                                <filter id="blur1">
                                    <feGaussianBlur in="SourceGraphic" stdDeviation="3" /> <!-- stronger blur -->
                                </filter>
                            </defs>
                            <!-- slightly bigger radius -->
                            <circle cx="60" cy="60" r="55"
                                    stroke="url(#glowGradient1)"
                                    stroke-width="5"
                                    fill="none"
                                    filter="url(#blur1)" />

                        </svg>

                        <!-- Glow Ring 2 -->
                        <svg class="glow-ring ring2" viewBox="0 0 120 120" style="width:100%; height:100%; position:absolute; top:0; left:0;">
                            <circle cx="60" cy="60" r="50"
                                    stroke="#ffffff"
                                    stroke-width="2"
                                    fill="none"
                                    opacity="0.8" /> <!-- stronger opacity -->
                        </svg>

                        <!-- Logo / Icon -->
                        @if (!string.IsNullOrEmpty(branding?.LogoPath))
                        {
                            <img src="@branding.LogoPath" alt="Logo"
                                 style="position:absolute; top:50%; left:50%; transform:translate(-50%, -50%);
                                height:28px;
                                filter: drop-shadow(0 0 3px #fff) drop-shadow(0 0 5px #ffea00);" />
                        }
                        else
                        {
                            <i class="@iconClass fs-5" style="position:absolute; top:50%; left:50%; transform:translate(-50%, -50%);
                                                     text-shadow: 0 0 3px #fff, 0 0 5px #ffea00;"></i>
                        }
                    </div>

                    <span>@brandName</span>
                </a>


                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#mainNavbar"
                        aria-controls="mainNavbar" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <div class="collapse navbar-collapse" id="mainNavbar">
                    <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                        <li class="nav-item">
                            <a class="nav-link" asp-controller="Home" asp-action="Index"><i class="bi bi-house-door me-1"></i>Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" asp-controller="Home" asp-action="Privacy"><i class="bi bi-shield-lock me-1"></i>Privacy</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" asp-controller="Home" asp-action="Contact"><i class="bi bi-telephone me-1"></i>Contact</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" asp-controller="Help" asp-action="HomeHelp">
                                <i class="bi bi-question-circle me-1"></i> Help
                            </a>
                        </li>


                        @if (User?.Identity?.IsAuthenticated == true)
                        {
                            if (User.IsInRole("Admin"))
                            {
                                <li class="nav-item">
                                    <a class="nav-link" href="/Admin/Dashboard"><i class="bi bi-speedometer2 me-1"></i>Admin Panel</a>
                                </li>
                            }

                            if (User.IsInRole("Staff"))
                            {
                                <li class="nav-item">
                                    <a class="nav-link" href="/Admin/Dashboard"><i class="bi bi-speedometer2 me-1"></i>Staff Panel</a>
                                </li>
                            }

                            if (User.IsInRole("User"))
                            {
                                <li class="nav-item">
                                    <a class="nav-link" href="/User/Dashboard"><i class="bi bi-person-square me-1"></i>User Dashboard</a>
                                </li>
                            }
                        }
                    </ul>

                    <ul class="navbar-nav ms-auto">
                        @if (User?.Identity?.IsAuthenticated == true)
                        {
                            <li class="nav-item">
                                <span class="nav-link"><i class="bi bi-person-circle me-1"></i>Hello, @(User?.Identity?.Name ?? "User")</span>
                            </li>
                            <li class="nav-item">
                                <!-- Trigger Logout Modal -->
                                <button type="button" class="btn btn-link nav-link text-danger" data-bs-toggle="modal" data-bs-target="#logoutModal">
                                    <i class="bi bi-box-arrow-right me-1"></i>Logout
                                </button>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item">
                                <a class="nav-link" asp-controller="Account" asp-action="UserLogin">
                                    <i class="bi bi-box-arrow-in-right me-1"></i>Login
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <!-- Lyrics Modal -->
    <!--  <partial name="_LyricsModal" /> -->


    
    <!-- Logout Confirmation Modal -->
    <div class="modal fade" id="logoutModal" tabindex="-1" aria-labelledby="logoutModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content border-0 shadow-lg">

                <!-- Header -->
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title d-flex align-items-center" id="logoutModalLabel">
                        <i class="bi bi-box-arrow-right me-2"></i> Confirm Logout
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <!-- Body -->
                <div class="modal-body text-center">
                    <i class="bi bi-exclamation-triangle-fill text-warning fs-1 mb-3"></i>
                    <p class="fs-5">Are you sure you want to <strong>log out</strong> of your account?</p>
                </div>

                <!-- Footer -->
                <div class="modal-footer justify-content-center">
                    <form method="post" asp-controller="Account" asp-action="Logout">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-danger px-4">
                            <i class="bi bi-box-arrow-right me-1"></i> Yes, Logout
                        </button>
                    </form>
                    <button type="button" class="btn btn-secondary px-4" data-bs-dismiss="modal">
                        <i class="bi bi-x-circle me-1"></i> Cancel
                    </button>
                </div>

            </div>
        </div>
    </div>


    <div class="container mt-4">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="footer border-top mt-5 py-3 bg-light">
        <div class="container d-flex justify-content-center flex-wrap">
            <span class="text-nowrap">&copy; @DateTime.Now.Year - Santa Fe Water Billing System -</span>
            <a class="mx-1 text-nowrap" asp-controller="Home" asp-action="Index">Home</a>
            <span class="text-nowrap">|</span>
            <a class="mx-1 text-nowrap" asp-controller="Home" asp-action="Privacy">Privacy</a>
            <span class="text-nowrap">|</span>
            <a class="mx-1 text-nowrap" asp-controller="Home" asp-action="Contact">Contact</a>
            <span class="text-nowrap">|</span>
            <a class="mx-1 text-nowrap" asp-controller="Inquiry" asp-action="Create">Inquiries</a>
        </div>
    </footer>

    <!-- ✅ Cookie Consent Banner (moved near footer) -->
    <partial name="_CookieConsentPartial" />

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    @RenderSection("Scripts", required: false)




    <!--  
        <script>
            // lyrics + timestamps for each song
            const songs = {
                nanditoAko: {
                    audio: "/music/nandito-ako.mp3",
                           lyrics: [
                        { time: 0, text: "[Verse 1]" },
                        { time: 0, text: "Nandito ako, umiibig sa'yo" },
                        { time: 6, text: "Buong puso ko'y tanging sa'yo lamang" },
                        { time: 12, text: "Kahit na ikaw ay wala na" },
                        { time: 18, text: "Nandito pa rin ako, nagmamahal sa'yo" },

                        { time: 26, text: "[Chorus]" },
                        { time: 26, text: "Nandito ako, naghihintay pa rin sa'yo" },
                        { time: 34, text: "Umaasa kahit na masaktan" },
                        { time: 42, text: "Babalik ka rin, muling iibigin" },
                        { time: 50, text: "Nandito ako para sa’yo" }
                    ]
                },
                manCantBeMoved: {
                    audio: "/music/the-man-who-cant-be-moved.mp3",
                    lyrics: [
                                { time: 0,   text: "[Intro]" },
        { time: 8,   text: "[Verse 1]" },
        { time: 8,   text: "Going back to the corner where I first saw you" },
        { time: 14,  text: "Gonna camp in my sleeping bag, I'm not gonna move" },
        { time: 19,  text: "Got some words on cardboard, got your picture in my hand" },
        { time: 24,  text: "Saying, 'If you see this girl, can you tell her where I am?'" },
        { time: 28,  text: "Some try to hand me money, they don't understand" },
        { time: 34,  text: "I'm not broke, I'm just a broken-hearted man" },
        { time: 39,  text: "I know it makes no sense, what else can I do?" },
        { time: 43,  text: "And how can I move on when I'm still in love with you?" },

        { time: 48,  text: "[Chorus]" },
        { time: 48,  text: "'Cause if one day you wake up, and find that you're missing me" },
        { time: 52,  text: "And your heart starts to wonder where on this Earth I could be" },
        { time: 57,  text: "Thinking maybe you'll come back here to the place that we'd meet" },
        { time: 62,  text: "And you'll see me waiting for you, on the corner of the street" },
        { time: 67,  text: "So I'm not moving" },
        { time: 70,  text: "I'm not moving" },

        { time: 78, text: "[Verse 2]" },
        { time: 86, text: "Policeman says, 'Son, you can't stay here'" },
        { time: 91, text: "I say, 'There's someone I'm waiting for, if it's a day, a month, a year'" },
        { time: 96, text: "Gotta stand my ground, even if it rains or snows" },
        { time: 101,text: "If she changes her mind, this is the first place she will go" },

        { time: 102, text: "[Chorus]" },
        { time: 105, text: "'Cause if one day you wake up, and find that you're missing me" },
        { time: 110, text: "And your heart starts to wonder where on this Earth I could be" },
        { time: 115, text: "Thinking maybe you'll come back here to the place that we'd meet" },
        { time: 120, text: "And you'll see me waiting for you, on the corner of the street" },
        { time: 124, text: "So I'm not moving" },
        { time: 129, text: "I'm not moving" },
        { time: 134, text: "I'm not moving" },
        { time: 137, text: "I'm not moving" },

        { time: 196, text: "[Bridge]" },
        { time: 196, text: "People talk about the guy who's waiting on a girl, oh" },
        { time: 202, text: "There are no holes in his shoes, but a big hole in his world, mmm" },
        { time: 208, text: "Maybe I'll get famous as the man who can't be moved" },
        { time: 214, text: "And maybe you won't mean to, but you'll see me on the news" },
        { time: 220, text: "And you'll come running to the corner 'cause you know it's just for you" },
        { time: 226, text: "I'm the man who can't be moved" },
        { time: 232, text: "I'm the man who can't be moved" },

        { time: 240, text: "[Chorus]" },
        { time: 240, text: "'Cause if one day you wake up, and find that you're missing me (find you're missing me)" },
        { time: 248, text: "And your heart starts to wonder where on this Earth I could be (oh, where on Earth I could be)" },
        { time: 256, text: "Thinking maybe you'll come back here to the place that we'd meet (to the place that we'd meet, oh, oh)" },
        { time: 264, text: "And you'll see me waiting for you, on the corner of the street (on the corner of the street)" },
        { time: 272, text: "So I'm not moving" },

        { time: 280, text: "[Chorus]" },
        { time: 280, text: "'Cause if one day you wake up, and find that you're missing me (I'm not moving)" },
        { time: 288, text: "And your heart starts to wonder where on this Earth I could be (I'm not moving)" },
        { time: 296, text: "Thinking maybe you'll come back here to the place that we'd meet (I'm not moving)" },
        { time: 304, text: "And you'll see me waiting for you, on the corner of the street" },

        { time: 314, text: "[Outro]" },
        { time: 314, text: "Going back to the corner" },
        { time: 318, text: "Where I first saw you" },
        { time: 322, text: "Gonna camp in my sleeping bag" },
        { time: 326, text: "I'm not gonna move" }

                    ]
                }
            };

            const audio = document.getElementById("lyricsAudio");
            const audioSource = document.getElementById("audioSource");
            const lyricsDisplay = document.getElementById("lyricsDisplay");
            const songSelector = document.getElementById("songSelector");

            let currentLyrics = [];

            function loadSong(key) {
                const song = songs[key];
                currentLyrics = song.lyrics;

                // Always show lyrics even if no mp3
                if (song.audio) {
                    audioSource.src = song.audio;
                    audio.load();
                } else {
                    audioSource.src = "";
                    audio.load();
                }

                // render lyrics
                lyricsDisplay.innerHTML = "";
                song.lyrics.forEach((line, i) => {
                    const p = document.createElement("p");
                    p.textContent = line.text;
                    p.classList.add("lyrics-line");
                    p.setAttribute("data-time", line.time);
                    lyricsDisplay.appendChild(p);
                });
            }

            // highlight line while playing
            audio.addEventListener("timeupdate", () => {
                const currentTime = audio.currentTime;
                let activeIndex = -1;

                currentLyrics.forEach((line, i) => {
                    if (currentTime >= line.time) activeIndex = i;
                });

                const lines = document.querySelectorAll("#lyricsDisplay .lyrics-line");
                lines.forEach((line, i) => {
                    line.classList.toggle("active-line", i === activeIndex);
                });

                if (activeIndex >= 0) {
                    lines[activeIndex].scrollIntoView({ behavior: "smooth", block: "center" });
                }
            });

            // song selector change
            songSelector.addEventListener("change", e => {
                loadSong(e.target.value);
            });

            // auto show modal on page load
            document.addEventListener("DOMContentLoaded", function () {
                loadSong(songSelector.value);
                const modal = new bootstrap.Modal(document.getElementById("lyricsModal"));
                modal.show();
            });
    </script> 
    -->
   
</body>
</html>

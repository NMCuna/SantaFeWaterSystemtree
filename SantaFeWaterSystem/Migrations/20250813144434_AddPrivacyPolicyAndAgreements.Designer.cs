// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SantaFeWaterSystem.Data;

#nullable disable

namespace SantaFeWaterSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250813144434_AddPrivacyPolicyAndAgreements")]
    partial class AddPrivacyPolicyAndAgreements
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SantaFeWaterSystem.Models.AuditTrail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerformedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AuditTrails");
                });

            modelBuilder.Entity("SantaFeWaterSystem.Models.AuditTrailArchive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerformedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AuditTrailArchives");
                });

            modelBuilder.Entity("SantaFeWaterSystem.Models.BillNotification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BillingId")
                        .HasColumnType("int");

                    b.Property<int>("ConsumerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsNotified")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BillingId");

                    b.HasIndex("ConsumerId");

                    b.ToTable("BillNotifications");
                });

            modelBuilder.Entity("SantaFeWaterSystem.Models.Billing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("AdditionalFees")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AmountDue")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BillNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BillingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ConsumerId")
                        .HasColumnType("int");

                    b.Property<decimal>("CubicMeterUsed")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<decimal>("Penalty")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PresentReading")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PreviousReading")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ConsumerId");

                    b.ToTable("Billings");
                });

            modelBuilder.Entity("SantaFeWaterSystem.Models.Consumer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountType")
                        .HasColumnType("int");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDisconnected")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeterAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeterNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("Consumers");
                });

            modelBuilder.Entity("SantaFeWaterSystem.Models.Disconnection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BillingId")
                        .HasColumnType("int");

                    b.Property<int>("ConsumerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateDisconnected")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateReconnected")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReconnected")
                        .HasColumnType("bit");

                    b.Property<string>("PerformedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BillingId");

                    b.HasIndex("ConsumerId");

                    b.ToTable("Disconnections");
                });

            modelBuilder.Entity("SantaFeWaterSystem.Models.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RepliedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reply")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SubmittedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("SantaFeWaterSystem.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ConsumerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SendToAll")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConsumerId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("SantaFeWaterSystem.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BillingId")
                        .HasColumnType("int");

                    b.Property<int>("ConsumerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProcessedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiptPath")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TransactionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("BillingId");

                    b.HasIndex("ConsumerId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("SantaFeWaterSystem.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Access to user management",
                            Name = "ManageUsers"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Access to consumer management",
                            Name = "ManageConsumers"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Access to billing management",
                            Name = "ManageBilling"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Access to payment management",
                            Name = "ManagePayments"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Access to disconnection management",
                            Name = "ManageDisconnections"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Access to reports",
                            Name = "ViewReports"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Access to notifications management",
                            Name = "ManageNotifications"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Access to support management",
                            Name = "ManageSupport"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Access to feedback management",
                            Name = "ManageFeedback"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Permission to register new admins",
                            Name = "RegisterAdmin"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Permission to register new users",
                            Name = "RegisterUser"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Permission to manage QR codes",
                            Name = "ManageQRCodes"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Permission to manage rates",
                            Name = "ManageRate"
                        },
                        new
                        {
                            Id = 14,
                            Description = "Permission to edit user details",
                            Name = "EditUser"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Permission to reset user password",
                            Name = "ResetPassword"
                        },
                        new
                        {
                            Id = 16,
                            Description = "Permission to delete a user",
                            Name = "DeleteUser"
                        },
                        new
                        {
                            Id = 17,
                            Description = "Permission to reset two-factor authentication",
                            Name = "Reset2FA"
                        },
                        new
                        {
                            Id = 18,
                            Description = "Permission to lock a user account",
                            Name = "LockUser"
                        },
                        new
                        {
                            Id = 19,
                            Description = "Permission to unlock a user account",
                            Name = "UnlockUser"
                        },
                        new
                        {
                            Id = 20,
                            Description = "Permission to view consumer details",
                            Name = "ViewConsumer"
                        },
                        new
                        {
                            Id = 21,
                            Description = "Permission to edit consumer",
                            Name = "EditConsumer"
                        },
                        new
                        {
                            Id = 22,
                            Description = "Permission to delete consumer",
                            Name = "DeleteConsumer"
                        },
                        new
                        {
                            Id = 23,
                            Description = "Permission to view billing records",
                            Name = "ViewBilling"
                        },
                        new
                        {
                            Id = 24,
                            Description = "Permission to edit billing records",
                            Name = "EditBilling"
                        },
                        new
                        {
                            Id = 25,
                            Description = "Permission to delete billing records",
                            Name = "DeleteBilling"
                        },
                        new
                        {
                            Id = 26,
                            Description = "Permission to send billing notifications",
                            Name = "NotifyBilling"
                        },
                        new
                        {
                            Id = 27,
                            Description = "Permission to view penalty history logs",
                            Name = "ViewPenaltyLog"
                        },
                        new
                        {
                            Id = 28,
                            Description = "Permission to view payment records",
                            Name = "ViewPayment"
                        },
                        new
                        {
                            Id = 29,
                            Description = "Permission to edit payment records",
                            Name = "EditPayment"
                        },
                        new
                        {
                            Id = 30,
                            Description = "Permission to delete payment records",
                            Name = "DeletePayment"
                        },
                        new
                        {
                            Id = 31,
                            Description = "Permission to verify payment records",
                            Name = "VerifyPayment"
                        });
                });

            modelBuilder.Entity("SantaFeWaterSystem.Models.PrivacyPolicy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Version")
                        .IsUnique();

                    b.ToTable("PrivacyPolicies");
                });

            modelBuilder.Entity("SantaFeWaterSystem.Models.Rate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountType")
                        .HasColumnType("int");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PenaltyAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RatePerCubicMeter")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Rates");
                });

            modelBuilder.Entity("SantaFeWaterSystem.Models.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("SantaFeWaterSystem.Models.SmsLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ConsumerId")
                        .HasColumnType("int");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponseMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RetryCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ConsumerId");

                    b.ToTable("SmsLogs");
                });

            modelBuilder.Entity("SantaFeWaterSystem.Models.StaffPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("StaffId");

                    b.ToTable("StaffPermissions");
                });

            modelBuilder.Entity("SantaFeWaterSystem.Models.Support", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdminReply")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("ConsumerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReplySeen")
                        .HasColumnType("bit");

                    b.Property<bool>("IsResolved")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("RepliedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ResolvedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ConsumerId");

                    b.ToTable("Supports");
                });

            modelBuilder.Entity("SantaFeWaterSystem.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("AccountNumber")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("ConsumerId")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMfaEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LockoutEnd")
                        .HasColumnType("datetime2");

                    b.Property<string>("MfaSecret")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PasswordResetExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SantaFeWaterSystem.Models.UserPrivacyAgreement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AgreedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ConsumerId")
                        .HasColumnType("int");

                    b.Property<int>("PolicyVersion")
                        .HasColumnType("int");

                    b.Property<int?>("PrivacyPolicyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PrivacyPolicyId");

                    b.HasIndex("ConsumerId", "PolicyVersion")
                        .IsUnique();

                    b.ToTable("UserPrivacyAgreements");
                });

            modelBuilder.Entity("SantaFeWaterSystem.Models.UserPushSubscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Auth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endpoint")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P256DH")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserPushSubscriptions");
                });

            modelBuilder.Entity("SantaFeWaterSystem.Models.BillNotification", b =>
                {
                    b.HasOne("SantaFeWaterSystem.Models.Billing", "Billing")
                        .WithMany()
                        .HasForeignKey("BillingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SantaFeWaterSystem.Models.Consumer", "Consumer")
                        .WithMany()
                        .HasForeignKey("ConsumerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Billing");

                    b.Navigation("Consumer");
                });

            modelBuilder.Entity("SantaFeWaterSystem.Models.Billing", b =>
                {
                    b.HasOne("SantaFeWaterSystem.Models.Consumer", "Consumer")
                        .WithMany("Billings")
                        .HasForeignKey("ConsumerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consumer");
                });

            modelBuilder.Entity("SantaFeWaterSystem.Models.Consumer", b =>
                {
                    b.HasOne("SantaFeWaterSystem.Models.User", "User")
                        .WithOne("Consumer")
                        .HasForeignKey("SantaFeWaterSystem.Models.Consumer", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("User");
                });

            modelBuilder.Entity("SantaFeWaterSystem.Models.Disconnection", b =>
                {
                    b.HasOne("SantaFeWaterSystem.Models.Billing", "Billing")
                        .WithMany("Disconnections")
                        .HasForeignKey("BillingId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SantaFeWaterSystem.Models.Consumer", "Consumer")
                        .WithMany()
                        .HasForeignKey("ConsumerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Billing");

                    b.Navigation("Consumer");
                });

            modelBuilder.Entity("SantaFeWaterSystem.Models.Feedback", b =>
                {
                    b.HasOne("SantaFeWaterSystem.Models.User", "User")
                        .WithMany("Feedbacks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SantaFeWaterSystem.Models.Notification", b =>
                {
                    b.HasOne("SantaFeWaterSystem.Models.Consumer", "Consumer")
                        .WithMany("Notifications")
                        .HasForeignKey("ConsumerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Consumer");
                });

            modelBuilder.Entity("SantaFeWaterSystem.Models.Payment", b =>
                {
                    b.HasOne("SantaFeWaterSystem.Models.Billing", "Billing")
                        .WithMany()
                        .HasForeignKey("BillingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SantaFeWaterSystem.Models.Consumer", "Consumer")
                        .WithMany()
                        .HasForeignKey("ConsumerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Billing");

                    b.Navigation("Consumer");
                });

            modelBuilder.Entity("SantaFeWaterSystem.Models.SmsLog", b =>
                {
                    b.HasOne("SantaFeWaterSystem.Models.Consumer", "Consumer")
                        .WithMany()
                        .HasForeignKey("ConsumerId");

                    b.Navigation("Consumer");
                });

            modelBuilder.Entity("SantaFeWaterSystem.Models.StaffPermission", b =>
                {
                    b.HasOne("SantaFeWaterSystem.Models.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SantaFeWaterSystem.Models.User", "Staff")
                        .WithMany("StaffPermissions")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("SantaFeWaterSystem.Models.Support", b =>
                {
                    b.HasOne("SantaFeWaterSystem.Models.Consumer", "Consumer")
                        .WithMany()
                        .HasForeignKey("ConsumerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consumer");
                });

            modelBuilder.Entity("SantaFeWaterSystem.Models.UserPrivacyAgreement", b =>
                {
                    b.HasOne("SantaFeWaterSystem.Models.Consumer", "Consumer")
                        .WithMany()
                        .HasForeignKey("ConsumerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SantaFeWaterSystem.Models.PrivacyPolicy", "Policy")
                        .WithMany()
                        .HasForeignKey("PrivacyPolicyId");

                    b.Navigation("Consumer");

                    b.Navigation("Policy");
                });

            modelBuilder.Entity("SantaFeWaterSystem.Models.UserPushSubscription", b =>
                {
                    b.HasOne("SantaFeWaterSystem.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SantaFeWaterSystem.Models.Billing", b =>
                {
                    b.Navigation("Disconnections");
                });

            modelBuilder.Entity("SantaFeWaterSystem.Models.Consumer", b =>
                {
                    b.Navigation("Billings");

                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("SantaFeWaterSystem.Models.User", b =>
                {
                    b.Navigation("Consumer");

                    b.Navigation("Feedbacks");

                    b.Navigation("StaffPermissions");
                });
#pragma warning restore 612, 618
        }
    }
}
